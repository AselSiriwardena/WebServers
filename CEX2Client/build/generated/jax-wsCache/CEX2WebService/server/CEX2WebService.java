
package server;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CEX2WebService", targetNamespace = "http://server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CEX2WebService {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStringLength", targetNamespace = "http://server/", className = "server.GetStringLength")
    @ResponseWrapper(localName = "getStringLengthResponse", targetNamespace = "http://server/", className = "server.GetStringLengthResponse")
    @Action(input = "http://server/CEX2WebService/getStringLengthRequest", output = "http://server/CEX2WebService/getStringLengthResponse")
    public Integer getStringLength(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addNameToServer", targetNamespace = "http://server/", className = "server.AddNameToServer")
    @ResponseWrapper(localName = "addNameToServerResponse", targetNamespace = "http://server/", className = "server.AddNameToServerResponse")
    @Action(input = "http://server/CEX2WebService/addNameToServerRequest", output = "http://server/CEX2WebService/addNameToServerResponse")
    public String addNameToServer(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns server.Student
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findStudentWithHighestGrade", targetNamespace = "http://server/", className = "server.FindStudentWithHighestGrade")
    @ResponseWrapper(localName = "findStudentWithHighestGradeResponse", targetNamespace = "http://server/", className = "server.FindStudentWithHighestGradeResponse")
    @Action(input = "http://server/CEX2WebService/findStudentWithHighestGradeRequest", output = "http://server/CEX2WebService/findStudentWithHighestGradeResponse")
    public Student findStudentWithHighestGrade();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addStudentToServer", targetNamespace = "http://server/", className = "server.AddStudentToServer")
    @ResponseWrapper(localName = "addStudentToServerResponse", targetNamespace = "http://server/", className = "server.AddStudentToServerResponse")
    @Action(input = "http://server/CEX2WebService/addStudentToServerRequest", output = "http://server/CEX2WebService/addStudentToServerResponse")
    public String addStudentToServer(
        @WebParam(name = "arg0", targetNamespace = "")
        Student arg0);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findLongestNameInServer", targetNamespace = "http://server/", className = "server.FindLongestNameInServer")
    @ResponseWrapper(localName = "findLongestNameInServerResponse", targetNamespace = "http://server/", className = "server.FindLongestNameInServerResponse")
    @Action(input = "http://server/CEX2WebService/findLongestNameInServerRequest", output = "http://server/CEX2WebService/findLongestNameInServerResponse")
    public String findLongestNameInServer();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.Integer
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStringLengthWithException", targetNamespace = "http://server/", className = "server.GetStringLengthWithException")
    @ResponseWrapper(localName = "getStringLengthWithExceptionResponse", targetNamespace = "http://server/", className = "server.GetStringLengthWithExceptionResponse")
    @Action(input = "http://server/CEX2WebService/getStringLengthWithExceptionRequest", output = "http://server/CEX2WebService/getStringLengthWithExceptionResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://server/CEX2WebService/getStringLengthWithException/Fault/Exception")
    })
    public Integer getStringLengthWithException(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws Exception_Exception
    ;

    /**
     * 
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isConnected", targetNamespace = "http://server/", className = "server.IsConnected")
    @ResponseWrapper(localName = "isConnectedResponse", targetNamespace = "http://server/", className = "server.IsConnectedResponse")
    @Action(input = "http://server/CEX2WebService/isConnectedRequest", output = "http://server/CEX2WebService/isConnectedResponse")
    public Integer isConnected();

}
